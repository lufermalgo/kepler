# C√≥digo para corregir la celda 3 del notebook
import json

# Leer el notebook
with open('metrics_analysis.ipynb', 'r') as f:
    notebook = json.load(f)

# Encontrar la celda 3 (√≠ndice 3) y actualizar su c√≥digo
notebook['cells'][3]['source'] = [
    "# Veamos qu√© m√©tricas est√°n disponibles\n",
    "metricas_disponibles = kp.data.from_splunk(\n",
    "    spl=\"| mstats latest(_value) as ultimo_valor WHERE index=kepler_metrics by metric_name\"\n",
    ")\n",
    "\n",
    "if len(metricas_disponibles) == 0:\n",
    "    print(\"‚ö†Ô∏è El √≠ndice de m√©tricas actualmente est√° vac√≠o.\")\n",
    "    print(\"üîÑ Esto es normal si acabas de configurar Kepler.\")\n",
    "    print(\"üí° Las m√©tricas se est√°n cargando en segundo plano...\")\n",
    "    print(\"\\nüìã Cuando haya datos, aqu√≠ ver√≠as algo como:\")\n",
    "    print(\"   - temperature.SENSOR_001\")\n",
    "    print(\"   - pressure.SENSOR_002\") \n",
    "    print(\"   - vibration.SENSOR_003\")\n",
    "    print(\"   - flow.SENSOR_004\")\n",
    "    print(\"\\n‚ñ∂Ô∏è Voy a continuar con datos simulados para demostrar las capacidades...\")\n",
    "else:\n",
    "    print(f\"‚úÖ M√©tricas encontradas: {len(metricas_disponibles)}\")\n",
    "\n",
    "metricas_disponibles"
]

# Guardar el notebook corregido
with open('metrics_analysis.ipynb', 'w') as f:
    json.dump(notebook, f, indent=1, ensure_ascii=False)

print("‚úÖ Notebook corregido")