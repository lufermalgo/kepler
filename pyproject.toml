[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kepler-framework"
version = "0.1.0"
description = "A pragmatic framework for industrial data science with Splunk and ML"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Kepler Team", email = "kepler@example.com"}]
keywords = ["data-science", "splunk", "machine-learning", "industrial", "mlops"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring",
]

# Dependencies
dependencies = [
    "pandas>=2.0.0",
    "pydantic>=2.0.0", 
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "splunk-sdk>=1.7.0",
    "scikit-learn>=1.3.0",
    "joblib>=1.3.0",
    "google-cloud-run>=0.10.0",
    "google-cloud-storage>=2.10.0",
    "flask>=2.3.0",
]

# Optional dependencies for development and notebooks
[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
notebook = [
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]
all = [
    "kepler-framework[dev,notebook]"
]

[project.urls]
Homepage = "https://github.com/lufermalgo/kepler"
Documentation = "https://github.com/lufermalgo/kepler/blob/main/README.md"
Repository = "https://github.com/lufermalgo/kepler"
Issues = "https://github.com/lufermalgo/kepler/issues"

[project.scripts]
kepler = "kepler.cli.main:app"

# Tool configurations
[tool.black]
line-length = 99
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 99
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "splunklib.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--disable-warnings",
    "--cov=kepler",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["kepler"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]